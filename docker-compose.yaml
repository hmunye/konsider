name: k6r

services:
  postgres:
    build:
      context: .
    container_name: prod-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    restart: unless-stopped

  server:
    build:
      context: ./server
    container_name: prod-server
    depends_on:
      - postgres
    networks:
      - backend
    restart: unless-stopped

  client:
    build:
      context: ./client
    container_name: prod-client
    depends_on:
      - server
    networks:
      - frontend
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: prod-nginx
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./certs/server.crt:/etc/nginx/ssl/server.crt
      - ./certs/server.key:/etc/nginx/ssl/server.key
    depends_on:
      - client
      - server
    ports:
      - "80:80"
      - "443:443"
    networks:
      - frontend
      - backend

networks:
  frontend:
    name: frontend
    driver: bridge
  backend:
    name: backend
    driver: bridge

volumes:
  postgres_data:
